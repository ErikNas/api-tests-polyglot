Перем юТест;

// основной метод для тестирования
Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт

	юТест = ЮнитТестирование;

	ВсеТесты = Новый Массив;
	ВсеТесты.Добавить("Тест_Должен_СоздатьНовуюЗверушку");

	Возврат ВсеТесты;
КонецФункции

Процедура Тест_Должен_СоздатьНовуюЗверушку() Экспорт
	
	ИмяЗверушки = "Барсик";

	СоединениеHTTP = Новый HTTPСоединение("https://petstore.swagger.io/v2/pet/");

	СтруктураДанныхJSON = Новый Структура();
	СтруктураДанныхJSON.Вставить("name", ИмяЗверушки);
	СтруктураДанныхJSON.Вставить("status", "available");
	ЗаписьJSON = Новый ЗаписьJSON();
	ЗаписьJSON.УстановитьСтроку(); 
	ЗаписатьJSON(ЗаписьJSON, СтруктураДанныхJSON);
    СтрокаJSON = ЗаписьJSON.Закрыть();

	ЗапросPost = Новый HTTPЗапрос();
	ЗапросPost.Заголовки.Вставить("Content-type", "application/json");
	ЗапросPost.УстановитьТелоИзСтроки(СтрокаJSON);
	ОтветPost = СоединениеHTTP.ОтправитьДляОбработки(ЗапросPost);

	юТест.ПроверитьРавенство(ОтветPost.КодСостояния, 200);

	ЧтениеJSON = Новый ЧтениеJSON();
	ЧтениеJSON.УстановитьСтроку(ОтветPost.ПолучитьТелоКакСтроку("UTF-8"));  		
	ТелоОтвета = ПрочитатьJSON(ЧтениеJSON);

	ЗапросGet = Новый HTTPЗапрос(ТелоОтвета.id);
	ЗапросGet.Заголовки.Вставить("Content-type", "application/json");
	ОтветGet = СоединениеHTTP.Получить(ЗапросGet);

	юТест.ПроверитьРавенство(ОтветGet.КодСостояния, 200);

	ЧтениеJSON = Новый ЧтениеJSON();
	ЧтениеJSON.УстановитьСтроку(ОтветGet.ПолучитьТелоКакСтроку("UTF-8"));  		
	ТелоОтвета = ПрочитатьJSON(ЧтениеJSON);
	юТест.ПроверитьРавенство(ТелоОтвета.name, ИмяЗверушки);

КонецПроцедуры
